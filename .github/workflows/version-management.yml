name: Version Management

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+'  # Tags like v1.0, v2.3 for major.minor updates
    branches:
      - main  # For automatic patch increments

jobs:
  update-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for proper branch creation
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'yarn'
      
      - name: Get current version
        id: current_version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $CURRENT_VERSION"
      
      - name: Determine new version and branch name
        id: version_info
        run: |
          # Check if this is a tag-based update (major.minor)
          if [[ "${{ github.ref }}" =~ ^refs/tags/v([0-9]+)\.([0-9]+)$ ]]; then
            # Extract major and minor from tag
            MAJOR="${BASH_REMATCH[1]}"
            MINOR="${BASH_REMATCH[2]}"
            
            # Use tag for major.minor, reset patch to 0
            NEW_VERSION="$MAJOR.$MINOR.0"
            echo "Version update from tag: ${{ steps.current_version.outputs.current_version }} → $NEW_VERSION"
          else
            # Regular push to main - increment patch version
            IFS='.' read -r MAJOR MINOR PATCH <<< "${{ steps.current_version.outputs.current_version }}"
            NEW_PATCH=$((PATCH + 1))
            NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"
            echo "Patch increment: ${{ steps.current_version.outputs.current_version }} → $NEW_VERSION"
          fi
          
          # Set outputs for later steps
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "branch_name=bump-version-to-$NEW_VERSION" >> $GITHUB_OUTPUT
      
      - name: Update package.json version
        run: |
          # Use Yarn to update the version field in package.json
          yarn version --new-version ${{ steps.version_info.outputs.new_version }} --no-git-tag-version
          echo "Updated package.json version to ${{ steps.version_info.outputs.new_version }}"
      
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: bump version to ${{ steps.version_info.outputs.new_version }}"
          title: "chore: bump version to ${{ steps.version_info.outputs.new_version }}"
          body: |
            This PR updates the version in package.json to ${{ steps.version_info.outputs.new_version }}.
            
            ${{ startsWith(github.ref, 'refs/tags/') && 'This update is based on the newly created tag.' || 'This is an automatic patch increment.' }}
          branch: ${{ steps.version_info.outputs.branch_name }}
          base: main
          delete-branch: true